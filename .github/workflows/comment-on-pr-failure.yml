name: 'Comment on PR when Another Workflow Fails'

on:
  workflow_run:
    workflows:
      - 'CI'
      - 'container_security.yml'
    types:
      - completed

jobs:
  notify_failed_pr:
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    runs-on: ubuntu-latest

    steps:
      - name: Post failure details to PR
        uses: actions/github-script@v7
        with:
          script: |
            const run = context.payload.workflow_run;
            const prs = run.pull_requests;
            if (prs.length === 0) {
              console.log('No pull request associated; skipping comment.');
              return;
            }

            // 失敗ジョブをリストアップ
            const jobsResp = await github.rest.actions.listJobsForWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: run.id,
            });
            const failedJobs = jobsResp.data.jobs.filter(j => j.conclusion === 'failure');

            // コメント本文を組み立て
            let body = `🚨 **Workflow '${run.name}' failed** 🚨\n\n`;
            for (const job of failedJobs) {
              // ログをフェッチして末尾 50 行を取得
              const logResp = await fetch(job.logs_url, {
                headers: { 'Authorization': `token ${process.env.GITHUB_TOKEN}` }
              });
              const logText = await logResp.text();
              const lines = logText.split('\n');
              const tail = lines.slice(-50).join('\n');

              body += `### ❌ ${job.name}\n`;
              body += `- [View full logs](${job.html_url})\n\n`;
              body += '```bash\n';
              body += `${tail}\n`;
              body += '```\n\n';
            }

            // PRごとにコメント
            for (const pr of prs) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body,
              });
            }
