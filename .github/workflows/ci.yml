name: CI

on:
  pull_request:
  workflow_dispatch:

concurrency:
  group: 'ci'
  cancel-in-progress: true

jobs:
  ci:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ["3.12"]
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v2

      - name: set up python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: install tflint, trivy, hadolint
        run: |
          set -o pipefail
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
          wget https://github.com/aquasecurity/trivy/releases/download/v0.59.1/trivy_0.59.1_Linux-64bit.deb
          sudo dpkg -i trivy_0.59.1_Linux-64bit.deb
          wget -O /usr/local/bin/hadolint https://github.com/hadolint/hadolint/releases/download/v2.12.0/hadolint-Linux-x86_64
          sudo chmod +x /usr/local/bin/hadolint

      - name: cache poetry
        uses: actions/cache@v4
        id: poetry-cache
        with:
          path: ~/.local
          key: ${{ runner.os }}-poetry-Python${{ matrix.python-version }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: install poetry
        if: steps.poetry-cache.outputs.cache-hit != 'true'
        run: curl -sSL https://install.python-poetry.org/ | python3 -

      - name: add poetry to path
        run: echo "{HOME}/.local/bin" >> $GITHUB_PATH

      - name: dependencies cache
        uses: actions/cache@v4
        id: dependencies-cache
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-dependencies-Python${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-dependencies-Python${{ matrix.python-version }}-

      - name: install dependencies
        if: steps.dependencies-cache.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-ansi

      # pre-commitで一括でチェックする
      - name: pre-commit
        if: always()
        run: poetry run pre-commit run --all-files
      # - name: run ruff (lint)
      #   if: always()
      #   run: poetry run ruff check --output-format=github .
      # - name: run ruff (format)
      #   if: always()
      #   run: poetry run ruff format --check --diff .
      # - name: run mypy
      #   if: always()
      #   run: poetry run mypy --config-file=pyproject.toml .

      - name: run test
        if: always()
        run: |
          set -o pipefail
          poetry run pytest -sv --cov=src --cov-report=term-missing --junitxml=pytest.xml | tee pytest-coverage.txt

      - name: pytest coverage comment
        uses: MishaKav/pytest-coverage-comment@v1.1.47
        with:
          pytest-coverage-path: ./pytest-coverage.txt
          junitxml-path: ./pytest.xml
