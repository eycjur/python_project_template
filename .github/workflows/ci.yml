name: CI

on:
  pull_request:
  workflow_dispatch:

concurrency:
  group: 'ci'
  cancel-in-progress: true

jobs:
  ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: Kesin11/actions-timeline@v2

      - uses: actions/checkout@v4

      - name: set up python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: install terraform, tflint, trivy, hadolint
        run: |
          set -o pipefail
          wget -O - https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt update && sudo apt install terraform
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
          wget https://github.com/aquasecurity/trivy/releases/download/v0.59.1/trivy_0.59.1_Linux-64bit.deb
          sudo dpkg -i trivy_0.59.1_Linux-64bit.deb
          wget -O /usr/local/bin/hadolint https://github.com/hadolint/hadolint/releases/download/v2.12.0/hadolint-Linux-x86_64
          sudo chmod +x /usr/local/bin/hadolint

      - name: install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: install dependencies
        run: uv sync --frozen --no-install-project

      # pre-commitで一括でチェックする
      - name: pre-commit
        if: always()
        run: uv run pre-commit run --all-files
      # - name: run ruff (lint)
      #   if: always()
      #   run: uv run ruff check --output-format=github .
      # - name: run ruff (format)
      #   if: always()
      #   run: uv run ruff format --check --diff .
      # - name: run mypy
      #   if: always()
      #   run: uv run mypy --config-file=pyproject.toml .

      - name: run test
        if: always()
        run: |
          set -o pipefail
          uv run pytest -sv --cov=app --cov-report=term-missing --junitxml=pytest.xml | tee pytest-coverage.txt

      - name: pytest coverage comment
        uses: MishaKav/pytest-coverage-comment@v1.1.47
        with:
          pytest-coverage-path: ./pytest-coverage.txt
          junitxml-path: ./pytest.xml
